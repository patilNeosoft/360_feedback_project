var globalFunctions = function () {    console.log("global functions loaded");    var showMessage = function (type, message) {        type = type.toLocaleLowerCase();        $.toast({            text: message || 'Successfull!',            stack: true,            position: 'top-center',            icon: type,            hideAfter: 4000        })    },        showErrorMessage = function (message) {            showMessage("error", message);        },        showSuccessMessage = function (message) {            showMessage("success", message)        },        deleteConfirm = function (source, message) {            $.confirm({                title: 'Confirm!',                content: message || 'Are you sure?',                type: 'red',                typeAnimated: true,                autoClose: 'cancel|8000',                buttons: {                    cancel: function () {                        $(source).trigger('cancelConfirm');                    },                    confirm: function () {                        $(source).trigger('deleteConfirm');                    }                }            });        },        onError = function () {            showErrorMessage("Something went wrong!");        },        loadPopup = function (source, url, title, panelCssClass) {            $("#Modal_Loader").load(url, function () {                $("#panelTitle").text(title);                if (panelCssClass) $("#CommonModel #modal_body").addClass(panelCssClass);                $("#CommonModel").modal("show");                $("#CommonModel").one("shown.bs.modal", function () {                    $(source).trigger("modalLoaded");                })            });        },        closeCommonModel = function () {            $("#CommonModel").modal('hide');        },        initializeDataTable = function (selector, options) {            $(selector).DataTable(options);        },        enableCheckboxCascade = function (allCheckSelector, checkboxSelector, elementToShow) {            $(document).on('change', allCheckSelector, function () {                $(checkboxSelector).prop("checked", $(this).is(':checked'))                if (elementToShow) $(elementToShow).toggle($(checkboxSelector + ':checked').length > 0);            });            $(document).on('change', checkboxSelector, function () {                $(allCheckSelector).prop('checked', $(checkboxSelector).length == $(checkboxSelector + ':checked').length);                if (elementToShow) $(elementToShow).toggle($(checkboxSelector + ':checked').length > 0);            });        };    return {        loadPopup: loadPopup,        showMessage: showMessage,        showErrorMessage: showErrorMessage,        showSuccessMessage: showSuccessMessage,        deleteConfirm: deleteConfirm,        onError: onError,        initializeDataTable: initializeDataTable,        closeCommonModel: closeCommonModel,        enableCheckboxCascade: enableCheckboxCascade    };}();$(function () {    $(document).ajaxStart(function () {        $('#cover-spin').show();    });    $(document).ajaxComplete(function (event, xhr, settings) {        $('#cover-spin').hide();    });});function checkall() {    var inputs = document.querySelectorAll('.pemissionChk');    var roleid = document.getElementById('RoleId').value;    var removepermisionsVM = {        RoleId: parseInt(roleid),        PermissionName: []    };    for (var i = 0; i < inputs.length; i++) {        if (inputs[i].checked != true) {            removepermisionsVM.PermissionName.push(parseInt(inputs[i].value));        }    }    $.ajax('/Permission/RemovePermissions', {        method: 'POST',        data: removepermisionsVM,        traditional: true,        success: function (d) {        }    });}$(document).ready(function () {    $('#RepaUserTable').DataTable(        {            "columnDefs": [                { "orderable": false, "targets": [4] }            ],            "oLanguage": {                "sLengthMenu": "Display Records MENU ",            }        }    );});$(document).ready(function () {    $('#RevaUserTable').DataTable(        {            "columnDefs": [                { "orderable": false, "targets": [4] }            ],            "oLanguage": {                "sLengthMenu": "Display Records MENU ",            }        }    );});$(document).ready(function () {    $(".loader").fadeOut("slow");    $("#overlayer").fadeOut("slow");});  